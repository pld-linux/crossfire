--- crossfire-1.75.0/plugins/cfpython/cfpython_map.c.orig	2019-11-27 23:52:20.000000000 +0100
+++ crossfire-1.75.0/plugins/cfpython/cfpython_map.c	2025-03-23 17:06:54.194016525 +0100
@@ -560,11 +560,15 @@ PyTypeObject Crossfire_MapType = {
     sizeof(Crossfire_Map),     /* tp_basicsize*/
     0,                         /* tp_itemsize*/
     Crossfire_Map_dealloc,     /* tp_dealloc*/
+#if PY_VERSION_HEX < 0x030D0000
     NULL,                      /* tp_print*/
+#else
+    0,                         /* tp_vectorcall_offset*/
+#endif
     NULL,                      /* tp_getattr*/
     NULL,                      /* tp_setattr*/
 #ifdef IS_PY3K
-    NULL,                      /* tp_reserved */
+    NULL,                      /* tp_as_sync / tp_reserved */
 #else
     (cmpfunc)Map_InternalCompare, /* tp_compare*/
 #endif
@@ -605,4 +609,9 @@ PyTypeObject Crossfire_MapType = {
     NULL,                      /* tp_subclasses */
     NULL,                      /* tp_weaklist */
     NULL,                      /* tp_del */
+    0,                         /* tp_version_tag */
+    NULL,                      /* tp_finalize */
+    NULL,                      /* tp_vectorcall */
+    0,                         /* tp_watched */
+    0,                         /* tp_versions_used */
 };
--- crossfire-1.75.0/plugins/cfpython/cfpython_archetype.c.orig	2019-01-07 22:54:44.000000000 +0100
+++ crossfire-1.75.0/plugins/cfpython/cfpython_archetype.c	2025-03-23 17:07:34.010855196 +0100
@@ -133,7 +133,11 @@ PyTypeObject Crossfire_ArchetypeType = {
     sizeof(Crossfire_Archetype), /* tp_basicsize*/
     0,                         /* tp_itemsize*/
     NULL,                      /* tp_dealloc*/
+#if PY_VERSION_HEX < 0x030D0000
     NULL,                      /* tp_print*/
+#else
+    0,                         /* tp_vectorcall_offset*/
+#endif
     NULL,                      /* tp_getattr*/
     NULL,                      /* tp_setattr*/
 #ifdef IS_PY3K
@@ -178,4 +182,9 @@ PyTypeObject Crossfire_ArchetypeType = {
     NULL,                      /* tp_subclasses */
     NULL,                      /* tp_weaklist */
     NULL,                      /* tp_del */
+    0,                         /* tp_version_tag */
+    NULL,                      /* tp_finalize */
+    NULL,                      /* tp_vectorcall */
+    0,                         /* tp_watched */
+    0,                         /* tp_versions_used */
 };
--- crossfire-1.75.0/plugins/cfpython/cfpython_region.c.orig	2019-01-07 22:54:44.000000000 +0100
+++ crossfire-1.75.0/plugins/cfpython/cfpython_region.c	2025-03-23 17:09:15.087958505 +0100
@@ -143,7 +143,11 @@ PyTypeObject Crossfire_RegionType = {
     sizeof(Crossfire_Region),  /* tp_basicsize*/
     0,                         /* tp_itemsize*/
     NULL,                      /* tp_dealloc*/
+#if PY_VERSION_HEX < 0x030D0000
     NULL,                      /* tp_print*/
+#else
+    0,                         /* tp_vectorcall_offset*/
+#endif
     NULL,                      /* tp_getattr*/
     NULL,                      /* tp_setattr*/
 #ifdef IS_PY3K
@@ -188,4 +192,9 @@ PyTypeObject Crossfire_RegionType = {
     NULL,                      /* tp_subclasses */
     NULL,                      /* tp_weaklist */
     NULL,                      /* tp_del */
+    0,                         /* tp_version_tag */
+    NULL,                      /* tp_finalize */
+    NULL,                      /* tp_vectorcall */
+    0,                         /* tp_watched */
+    0,                         /* tp_versions_used */
 };
--- crossfire-1.75.0/plugins/cfpython/cfpython.c.orig	2025-03-23 20:21:22.707867545 +0100
+++ crossfire-1.75.0/plugins/cfpython/cfpython.c	2025-03-23 20:21:29.181229160 +0100
@@ -72,7 +72,7 @@ CF_PLUGIN char SvnRevPlugin[] = SVN_REV;
  */
 typedef struct {
     sstring file;                   /**< Script full path. */
-    PyCodeObject *code;             /**< Compiled code, NULL if there was an error. */
+    PyObject *code;                 /**< Compiled code, NULL if there was an error. */
     time_t cached_time,             /**< Time this cache entry was created. */
             used_time;              /**< Last use of this cache entry. */
 } pycode_cache_entry;
@@ -822,7 +822,7 @@ static void log_python_error(void) {
 
 
 /** Outputs the compiled bytecode for a given python file, using in-memory caching of bytecode */
-static PyCodeObject *compilePython(char *filename) {
+static PyObject *compilePython(char *filename) {
     PyObject *scriptfile = NULL;
     sstring sh_path;
     struct stat stat_buf;
@@ -887,10 +887,17 @@ static PyCodeObject *compilePython(char
         } else {
             /* Note: FILE* being opaque, it works, but the actual structure may be different! */
             FILE* pyfile = cfpython_pyfile_asfile(scriptfile);
-            if ((n = PyParser_SimpleParseFile(pyfile, filename, Py_file_input))) {
-                replace->code = PyNode_Compile(n, filename);
-                PyNode_Free(n);
+            size_t filelen;
+            char *filecode;
+            fseek(pyfile, 0, SEEK_END);
+            filelen = ftell(pyfile);
+            fseek(pyfile, 0, SEEK_SET);
+            if ((filelen < 0) || ((filecode = malloc(filelen)) == NULL) || (fread(filecode, filelen, 1, pyfile) < 0)) {
+                cf_log(llevDebug, "cfpython - error reading %s\n", filename);
+                cf_free_string(sh_path);
+                return NULL;
             }
+            replace->code = Py_CompileString(filecode, filename, Py_file_input);
 
             if (PyErr_Occurred())
                 log_python_error();
@@ -912,7 +919,7 @@ static PyCodeObject *compilePython(char
 }
 
 static int do_script(CFPContext *context, int silent) {
-    PyCodeObject *pycode;
+    PyObject *pycode;
     PyObject *dict;
     PyObject *ret;
 #if 0
--- crossfire-1.75.0/plugins/cfpython/cfpython_object.c.orig	2021-01-05 17:53:30.000000000 +0100
+++ crossfire-1.75.0/plugins/cfpython/cfpython_object.c	2025-03-23 20:22:41.511545169 +0100
@@ -2956,7 +2956,11 @@ PyTypeObject Crossfire_ObjectType = {
     sizeof(Crossfire_Object),  /* tp_basicsize*/
     0,                         /* tp_itemsize*/
     Crossfire_Object_dealloc,  /* tp_dealloc*/
+#if PY_VERSION_HEX < 0x030D0000
     NULL,                      /* tp_print*/
+#else
+    0,                         /* tp_vectorcall_offset*/
+#endif
     NULL,                      /* tp_getattr*/
     NULL,                      /* tp_setattr*/
 #ifdef IS_PY3K
@@ -3001,6 +3005,11 @@ PyTypeObject Crossfire_ObjectType = {
     NULL,                      /* tp_subclasses */
     NULL,                      /* tp_weaklist */
     NULL,                      /* tp_del */
+    0,                         /* tp_version_tag */
+    NULL,                      /* tp_finalize */
+    NULL,                      /* tp_vectorcall */
+    0,                         /* tp_watched */
+    0,                         /* tp_versions_used */
 };
 
 static PyGetSetDef Player_getseters[] = {
@@ -3040,7 +3049,11 @@ PyTypeObject Crossfire_PlayerType = {
     sizeof(Crossfire_Player),  /* tp_basicsize*/
     0,                         /* tp_itemsize*/
     Crossfire_Player_dealloc,  /* tp_dealloc*/
+#if PY_VERSION_HEX < 0x030D0000
     NULL,                      /* tp_print*/
+#else
+    0,                         /* tp_vectorcall_offset*/
+#endif
     NULL,                      /* tp_getattr*/
     NULL,                      /* tp_setattr*/
     NULL,                      /* tp_compare*/
@@ -3082,6 +3095,11 @@ PyTypeObject Crossfire_PlayerType = {
     NULL,                      /* tp_subclasses */
     NULL,                      /* tp_weaklist */
     NULL,                      /* tp_del */
+    0,                         /* tp_version_tag */
+    NULL,                      /* tp_finalize */
+    NULL,                      /* tp_vectorcall */
+    0,                         /* tp_watched */
+    0,                         /* tp_versions_used */
 };
 
 /**
--- crossfire-1.75.0/plugins/cfpython/cfpython_party.c.orig	2019-01-07 22:54:44.000000000 +0100
+++ crossfire-1.75.0/plugins/cfpython/cfpython_party.c	2025-03-23 20:23:20.728383173 +0100
@@ -132,7 +132,11 @@ PyTypeObject Crossfire_PartyType = {
     sizeof(Crossfire_Party),   /* tp_basicsize*/
     0,                         /* tp_itemsize*/
     NULL,                      /* tp_dealloc*/
+#if PY_VERSION_HEX < 0x030D0000
     NULL,                      /* tp_print*/
+#else
+    0,                         /* tp_vectorcall_offset*/
+#endif
     NULL,                      /* tp_getattr*/
     NULL,                      /* tp_setattr*/
 #ifdef IS_PY3K
@@ -177,4 +181,9 @@ PyTypeObject Crossfire_PartyType = {
     NULL,                      /* tp_subclasses */
     NULL,                      /* tp_weaklist */
     NULL,                      /* tp_del */
+    0,                         /* tp_version_tag */
+    NULL,                      /* tp_finalize */
+    NULL,                      /* tp_vectorcall */
+    0,                         /* tp_watched */
+    0,                         /* tp_versions_used */
 };
--- crossfire-1.75.0/plugins/cfpython/cjson.c.orig	2019-01-07 22:54:44.000000000 +0100
+++ crossfire-1.75.0/plugins/cfpython/cjson.c	2025-03-23 21:38:31.087966344 +0100
@@ -687,8 +687,8 @@ static PyObject *encode_string(PyObject
 #if defined(IS_PY26) || defined(IS_PY3K)
 static PyObject *encode_unicode(PyObject *unicode) {
     PyObject *repr;
-    Py_UNICODE *s;
-    Py_ssize_t size;
+    Py_UCS4 ch;
+    Py_ssize_t size, idx = 0;
     char *p;
     static const char *hexdigit = "0123456789abcdef";
 #ifdef Py_UNICODE_WIDE
@@ -697,8 +697,7 @@ static PyObject *encode_unicode(PyObject
     static const Py_ssize_t expandsize = 6;
 #endif
 
-    s = PyUnicode_AS_UNICODE(unicode);
-    size = PyUnicode_GET_SIZE(unicode);
+    size = PyUnicode_GetLength(unicode);
 
     if (size > (PY_SSIZE_T_MAX-2-1)/expandsize) {
         PyErr_SetString(PyExc_OverflowError, "unicode object is too large to make repr");
@@ -717,10 +716,10 @@ static PyObject *encode_unicode(PyObject
     *p++ = '"';
 
     while (size-- > 0) {
-        Py_UNICODE ch = *s++;
+        Py_UCS4 ch = PyUnicode_ReadChar(unicode, idx++);
 
         /* Escape quotes */
-        if ((ch == (Py_UNICODE)PyByteArray_AS_STRING(repr)[0] || ch == '\\')) {
+        if ((ch == '"' || ch == '\\')) {
             *p++ = '\\';
             *p++ = (char)ch;
             continue;
@@ -1260,7 +1259,7 @@ static PyObject *JSON_decode(PyObject *s
         return NULL;
 
     if (PyUnicode_Check(string)) {
-#ifdef IS_PY3K
+#if 0
         /* HACK: Workaround for crash bug in Python3's PyUnicode_AsRawUnicodeEscapeString... */
         str = PyUnicode_EncodeRawUnicodeEscape(PyUnicode_AS_UNICODE(string),
                                                PyUnicode_GET_SIZE(string));
